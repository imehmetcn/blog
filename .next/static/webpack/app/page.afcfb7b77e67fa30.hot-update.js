"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/blog-data.ts":
/*!**************************!*\
  !*** ./lib/blog-data.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blogPosts: function() { return /* binding */ blogPosts; },\n/* harmony export */   getBlogPost: function() { return /* binding */ getBlogPost; },\n/* harmony export */   getBlogPosts: function() { return /* binding */ getBlogPosts; },\n/* harmony export */   getCategories: function() { return /* binding */ getCategories; },\n/* harmony export */   getTags: function() { return /* binding */ getTags; }\n/* harmony export */ });\n// Statik blog yazıları (şimdilik boş, sadece dinamik yazılar kullanılacak)\nconst blogPosts = [];\n// Client-side için API çağrıları\nasync function getBlogPosts() {\n    try {\n        const response = await fetch(\"/api/posts\");\n        if (response.ok) {\n            const posts = await response.json();\n            return posts.map((post)=>({\n                    ...post,\n                    createdAt: new Date(post.createdAt)\n                }));\n        }\n    } catch (error) {\n        console.error(\"Blog posts fetch error:\", error);\n    }\n    // Fallback: localStorage'dan veri al\n    if (true) {\n        const savedPosts = localStorage.getItem(\"blogPosts\");\n        if (savedPosts) {\n            const parsedPosts = JSON.parse(savedPosts).map((post)=>({\n                    ...post,\n                    createdAt: new Date(post.createdAt)\n                }));\n            return parsedPosts.sort((a, b)=>b.createdAt.getTime() - a.createdAt.getTime());\n        }\n    }\n    return [];\n}\nasync function getBlogPost(slug) {\n    try {\n        const response = await fetch(\"/api/posts/\".concat(slug));\n        if (response.ok) {\n            const post = await response.json();\n            return {\n                ...post,\n                createdAt: new Date(post.createdAt)\n            };\n        }\n    } catch (error) {\n        console.error(\"Blog post fetch error:\", error);\n    }\n    // Fallback: localStorage'dan veri al\n    if (true) {\n        const savedPosts = localStorage.getItem(\"blogPosts\");\n        if (savedPosts) {\n            const parsedPosts = JSON.parse(savedPosts).map((post)=>({\n                    ...post,\n                    createdAt: new Date(post.createdAt)\n                }));\n            return parsedPosts.find((post)=>post.slug === slug) || null;\n        }\n    }\n    return null;\n}\nfunction getCategories() {\n    const allPosts = getBlogPosts();\n    const categories = allPosts.map((post)=>post.category);\n    return [\n        ...new Set(categories)\n    ];\n}\nfunction getTags() {\n    const allPosts = getBlogPosts();\n    const tags = allPosts.flatMap((post)=>post.tags);\n    return [\n        ...new Set(tags)\n    ];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ibG9nLWRhdGEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFlQSwyRUFBMkU7QUFDcEUsTUFBTUEsWUFBd0IsRUFBRTtBQUV2QyxpQ0FBaUM7QUFDMUIsZUFBZUM7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTTtRQUM3QixJQUFJRCxTQUFTRSxFQUFFLEVBQUU7WUFDZixNQUFNQyxRQUFRLE1BQU1ILFNBQVNJLElBQUk7WUFDakMsT0FBT0QsTUFBTUUsR0FBRyxDQUFDLENBQUNDLE9BQWU7b0JBQy9CLEdBQUdBLElBQUk7b0JBQ1BDLFdBQVcsSUFBSUMsS0FBS0YsS0FBS0MsU0FBUztnQkFDcEM7UUFDRjtJQUNGLEVBQUUsT0FBT0UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtJQUMzQztJQUVBLHFDQUFxQztJQUNyQyxJQUFJLElBQWtCLEVBQWE7UUFDakMsTUFBTUUsYUFBYUMsYUFBYUMsT0FBTyxDQUFDO1FBQ3hDLElBQUlGLFlBQVk7WUFDZCxNQUFNRyxjQUFjQyxLQUFLQyxLQUFLLENBQUNMLFlBQVlOLEdBQUcsQ0FBQyxDQUFDQyxPQUFlO29CQUM3RCxHQUFHQSxJQUFJO29CQUNQQyxXQUFXLElBQUlDLEtBQUtGLEtBQUtDLFNBQVM7Z0JBQ3BDO1lBQ0EsT0FBT08sWUFBWUcsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVaLFNBQVMsQ0FBQ2EsT0FBTyxLQUFLRixFQUFFWCxTQUFTLENBQUNhLE9BQU87UUFDL0U7SUFDRjtJQUVBLE9BQU8sRUFBRTtBQUNYO0FBRU8sZUFBZUMsWUFBWUMsSUFBWTtJQUM1QyxJQUFJO1FBQ0YsTUFBTXRCLFdBQVcsTUFBTUMsTUFBTSxjQUFtQixPQUFMcUI7UUFDM0MsSUFBSXRCLFNBQVNFLEVBQUUsRUFBRTtZQUNmLE1BQU1JLE9BQU8sTUFBTU4sU0FBU0ksSUFBSTtZQUNoQyxPQUFPO2dCQUNMLEdBQUdFLElBQUk7Z0JBQ1BDLFdBQVcsSUFBSUMsS0FBS0YsS0FBS0MsU0FBUztZQUNwQztRQUNGO0lBQ0YsRUFBRSxPQUFPRSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO0lBQzFDO0lBRUEscUNBQXFDO0lBQ3JDLElBQUksSUFBa0IsRUFBYTtRQUNqQyxNQUFNRSxhQUFhQyxhQUFhQyxPQUFPLENBQUM7UUFDeEMsSUFBSUYsWUFBWTtZQUNkLE1BQU1HLGNBQWNDLEtBQUtDLEtBQUssQ0FBQ0wsWUFBWU4sR0FBRyxDQUFDLENBQUNDLE9BQWU7b0JBQzdELEdBQUdBLElBQUk7b0JBQ1BDLFdBQVcsSUFBSUMsS0FBS0YsS0FBS0MsU0FBUztnQkFDcEM7WUFDQSxPQUFPTyxZQUFZUyxJQUFJLENBQUNqQixDQUFBQSxPQUFRQSxLQUFLZ0IsSUFBSSxLQUFLQSxTQUFTO1FBQ3pEO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFFTyxTQUFTRTtJQUNkLE1BQU1DLFdBQVcxQjtJQUNqQixNQUFNMkIsYUFBYUQsU0FBU3BCLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS3FCLFFBQVE7SUFDckQsT0FBTztXQUFJLElBQUlDLElBQUlGO0tBQVk7QUFDakM7QUFFTyxTQUFTRztJQUNkLE1BQU1KLFdBQVcxQjtJQUNqQixNQUFNK0IsT0FBT0wsU0FBU00sT0FBTyxDQUFDekIsQ0FBQUEsT0FBUUEsS0FBS3dCLElBQUk7SUFDL0MsT0FBTztXQUFJLElBQUlGLElBQUlFO0tBQU07QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2Jsb2ctZGF0YS50cz8yMWUyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQmxvZ1Bvc3Qge1xyXG4gIGlkOiBudW1iZXJcclxuICB0aXRsZTogc3RyaW5nXHJcbiAgZXhjZXJwdDogc3RyaW5nXHJcbiAgY29udGVudDogc3RyaW5nXHJcbiAgY3JlYXRlZEF0OiBEYXRlXHJcbiAgYXV0aG9yOiBzdHJpbmdcclxuICBzbHVnOiBzdHJpbmdcclxuICBjYXRlZ29yeTogc3RyaW5nXHJcbiAgdGFnczogc3RyaW5nW11cclxuICByZWFkVGltZTogc3RyaW5nXHJcbiAgaW1hZ2U/OiBzdHJpbmcgLy8gQmFubmVyIHJlc21pIGnDp2luXHJcbiAgY29udGVudEltYWdlcz86IHN0cmluZ1tdIC8vIMSww6dlcmlrIHJlc2ltbGVyaSBpw6dpblxyXG59XHJcblxyXG4vLyBTdGF0aWsgYmxvZyB5YXrEsWxhcsSxICjFn2ltZGlsaWsgYm/Fnywgc2FkZWNlIGRpbmFtaWsgeWF6xLFsYXIga3VsbGFuxLFsYWNhaylcclxuZXhwb3J0IGNvbnN0IGJsb2dQb3N0czogQmxvZ1Bvc3RbXSA9IFtdXHJcblxyXG4vLyBDbGllbnQtc2lkZSBpw6dpbiBBUEkgw6dhxJ9yxLFsYXLEsVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QmxvZ1Bvc3RzKCk6IFByb21pc2U8QmxvZ1Bvc3RbXT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3Bvc3RzJylcclxuICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBwb3N0cyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICByZXR1cm4gcG9zdHMubWFwKChwb3N0OiBhbnkpID0+ICh7XHJcbiAgICAgICAgLi4ucG9zdCxcclxuICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKHBvc3QuY3JlYXRlZEF0KVxyXG4gICAgICB9KSlcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignQmxvZyBwb3N0cyBmZXRjaCBlcnJvcjonLCBlcnJvcilcclxuICB9XHJcbiAgXHJcbiAgLy8gRmFsbGJhY2s6IGxvY2FsU3RvcmFnZSdkYW4gdmVyaSBhbFxyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgY29uc3Qgc2F2ZWRQb3N0cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdibG9nUG9zdHMnKVxyXG4gICAgaWYgKHNhdmVkUG9zdHMpIHtcclxuICAgICAgY29uc3QgcGFyc2VkUG9zdHMgPSBKU09OLnBhcnNlKHNhdmVkUG9zdHMpLm1hcCgocG9zdDogYW55KSA9PiAoe1xyXG4gICAgICAgIC4uLnBvc3QsXHJcbiAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShwb3N0LmNyZWF0ZWRBdClcclxuICAgICAgfSkpXHJcbiAgICAgIHJldHVybiBwYXJzZWRQb3N0cy5zb3J0KChhLCBiKSA9PiBiLmNyZWF0ZWRBdC5nZXRUaW1lKCkgLSBhLmNyZWF0ZWRBdC5nZXRUaW1lKCkpXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBbXVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QmxvZ1Bvc3Qoc2x1Zzogc3RyaW5nKTogUHJvbWlzZTxCbG9nUG9zdCB8IG51bGw+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9wb3N0cy8ke3NsdWd9YClcclxuICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBwb3N0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4ucG9zdCxcclxuICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKHBvc3QuY3JlYXRlZEF0KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Jsb2cgcG9zdCBmZXRjaCBlcnJvcjonLCBlcnJvcilcclxuICB9XHJcbiAgXHJcbiAgLy8gRmFsbGJhY2s6IGxvY2FsU3RvcmFnZSdkYW4gdmVyaSBhbFxyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgY29uc3Qgc2F2ZWRQb3N0cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdibG9nUG9zdHMnKVxyXG4gICAgaWYgKHNhdmVkUG9zdHMpIHtcclxuICAgICAgY29uc3QgcGFyc2VkUG9zdHMgPSBKU09OLnBhcnNlKHNhdmVkUG9zdHMpLm1hcCgocG9zdDogYW55KSA9PiAoe1xyXG4gICAgICAgIC4uLnBvc3QsXHJcbiAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShwb3N0LmNyZWF0ZWRBdClcclxuICAgICAgfSkpXHJcbiAgICAgIHJldHVybiBwYXJzZWRQb3N0cy5maW5kKHBvc3QgPT4gcG9zdC5zbHVnID09PSBzbHVnKSB8fCBudWxsXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBudWxsXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzKCkge1xyXG4gIGNvbnN0IGFsbFBvc3RzID0gZ2V0QmxvZ1Bvc3RzKClcclxuICBjb25zdCBjYXRlZ29yaWVzID0gYWxsUG9zdHMubWFwKHBvc3QgPT4gcG9zdC5jYXRlZ29yeSlcclxuICByZXR1cm4gWy4uLm5ldyBTZXQoY2F0ZWdvcmllcyldXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUYWdzKCkge1xyXG4gIGNvbnN0IGFsbFBvc3RzID0gZ2V0QmxvZ1Bvc3RzKClcclxuICBjb25zdCB0YWdzID0gYWxsUG9zdHMuZmxhdE1hcChwb3N0ID0+IHBvc3QudGFncylcclxuICByZXR1cm4gWy4uLm5ldyBTZXQodGFncyldXHJcbn0iXSwibmFtZXMiOlsiYmxvZ1Bvc3RzIiwiZ2V0QmxvZ1Bvc3RzIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwicG9zdHMiLCJqc29uIiwibWFwIiwicG9zdCIsImNyZWF0ZWRBdCIsIkRhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJzYXZlZFBvc3RzIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlZFBvc3RzIiwiSlNPTiIsInBhcnNlIiwic29ydCIsImEiLCJiIiwiZ2V0VGltZSIsImdldEJsb2dQb3N0Iiwic2x1ZyIsImZpbmQiLCJnZXRDYXRlZ29yaWVzIiwiYWxsUG9zdHMiLCJjYXRlZ29yaWVzIiwiY2F0ZWdvcnkiLCJTZXQiLCJnZXRUYWdzIiwidGFncyIsImZsYXRNYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/blog-data.ts\n"));

/***/ })

});